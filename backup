import React from 'react';
import GoogleMapReact from 'google-map-react';
import { innerdata } from '../busData/inner'
import { outerdata } from '../busData/outer'
import ToolTip from 'react-portal-tooltip'
import MapMarker from './mapMarker'

let style = {
    style: {

        display: 'inline-block',
        background: 'rgba(0,0,0,.8)',
        padding: 20,
        boxShadow: '5px 5px 3px rgba(0,0,0,.5)'
    },
    arrowStyle: {
        color: 'rgba(0,0,0,.8)',
        borderColor: false
    }
}
class MapView extends React.Component {



    constructor(props) {
        super(props);
        this.state = {
            center: {
                lat: 36.990790,
                lng: -122.058555,

            },
            zoom: 15,
            toolTipActive: false,
            currentLocation: "",

        }
    }


    _onChildMouseEnter = (key, childProps) => {
        const markerId = childProps.marker.get('id');
        const index = this.props.markers.findIndex(m => m.get('id') === markerId);
        if (this.props.onMarkerHover) {
          this.props.onMarkerHover(index);
        }
      }
    
      _onChildMouseLeave = (/* key, childProps */) => {
        if (this.props.onMarkerHover) {
          this.props.onMarkerHover(-1);
        }
      }
    


    updateLocation(name) {
        this.setState({
            currentLocation: name
        })
    }


    render() {
        return (
            <div style={{ height: '100vh', width: '100%' }}>
                <div style={{ backgroundColor: 'transparent', marginTop: -21, marginBottom: -10 }}>
                    <h1>Bus++</h1>
                </div>

                <GoogleMapReact
                    
                    bootstrapURLKeys={{ key: 'AIzaSyCVBkdLAA2jhdd9iCuPyPL4dD9xpRD32AQ' }}
                    defaultCenter={this.state.center}
                    defaultZoom={this.state.zoom}
                >

                    {innerdata.map((x) =>
                        <MapMarker updateLocation={this.updateLocation.bind(this)} id={x.uid} lat={x.lat} lng={x.lng} uid={x.uid} ></MapMarker>

                    )

                    }
                    {outerdata.map((x) =>

                        <MapMarker updateLocation={this.updateLocation.bind(this)} id={x.uid} lat={x.lat} lng={x.lng} uid={x.uid} />


                    )

                    }

         
                    
                </GoogleMapReact>


            </div >
        )
    }
}

export default MapView;


